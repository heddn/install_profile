{#
/**
 * @file
 * Theme override to display a pager.
 *
 * Available variables:
 * - heading_id: Pagination heading ID.
 * - items: List of pager items.
 *   The list is keyed by the following elements:
 *   - first: Item for the first page; not present on the first page of results.
 *   - previous: Item for the previous page; not present on the first page
 *     of results.
 *   - next: Item for the next page; not present on the last page of results.
 *   - last: Item for the last page; not present on the last page of results.
 *   - pages: List of pages, keyed by page number.
 *   Sub-sub elements:
 *   items.first, items.previous, items.next, items.last, and each item inside
 *   items.pages contain the following elements:
 *   - href: URL with appropriate query parameters for the item.
 *   - attributes: A keyed list of HTML attributes for the item.
 *   - text: The visible text used for the item link, such as "‹ Previous"
 *     or "Next ›".
 * - current: The page number of the current page.
 * - ellipses: If there are more pages than the quantity allows, then an
 *   ellipsis before or after the listed pages may be present.
 *   - previous: Present if the currently visible list of pages does not start
 *     at the first page.
 *   - next: Present if the visible list of pages ends before the last page.
 *
 * @see template_preprocess_pager()
 */
#}
{%
  set nav_classes = [
  'pager',
  'flex',
  'justify-center',
  'my-5',
  'md:my-10',
  'mx-auto',
  'font-header-bold',
  'text-gray-700',
  'text-sm',
]
%}
{% if items %}
  <nav{{ create_attribute().addClass(nav_classes) }} role="navigation" aria-labelledby="{{ heading_id }}">
    <h4 id="{{ heading_id }}" class="visually-hidden">{{ 'Pagination'|t }}</h4>
    {%
      set items_classes = [
      'pager__items',
      'js-pager__items',
      'flex',
      'flex-wrap',
      'mx-auto',
    ]
    %}
    <ul{{ create_attribute().addClass(items_classes) }}>
      {%
        set active_classes = [
        'is-active',
        'bg-gray-800',
        'text-white',
        'shadow-lg',
        'inline-flex',
        'leading-none',
        'mx-1',
        'px-4',
        'py-3',
        'relative',
        'rounded',
        'pointer-events-none',
      ]
      %}
      {%
        set item_classes = [
        'inline-flex',
        'leading-none',
        'mx-1',
        'px-4',
        'py-3',
        'relative',
        'rounded',
        'hover:bg-gray-200',
      ]
      %}
      {# Print first item if we are not on the first page. #}
      {% if items.first %}
        <li{{ create_attribute().addClass(item_classes, 'pager__item', 'pager__item--first') }}>
          <a href="{{ items.first.href }}" title="{{ 'Go to first page'|t }}"{{ items.first.attributes.addClass('stretched-link')|without('href', 'title').addClass }}>
            <span class="visually-hidden">{{ 'First page'|t }}</span>
            <span aria-hidden="true">{{ items.first.text|default('« First'|t) }}</span>
          </a>
        </li>
      {% endif %}
      {# Print previous item if we are not on the first page. #}
      {% if items.previous %}
        <li{{ create_attribute().addClass(item_classes, 'pager__item', 'pager__item--previous') }}>
          <a href="{{ items.previous.href }}" title="{{ 'Go to previous page'|t }}" rel="prev"{{ items.previous.attributes.addClass('stretched-link')|without('href', 'title', 'rel') }}>
            <span class="visually-hidden">{{ 'Previous page'|t }}</span>
            <span aria-hidden="true">{{ items.previous.text|default('‹ Previous'|t) }}</span>
          </a>
        </li>
      {% endif %}
      {# Add an ellipsis if there are further previous pages. #}
      {% if ellipses.previous %}
        <li{{ create_attribute().addClass(item_classes, 'pager__item', 'pager__item--ellipsis', 'pointer-events-none') }} role="presentation">&hellip;</li>
      {% endif %}
      {# Now generate the actual pager piece. #}
      {% for key, item in items.pages %}
        <li{{ create_attribute().addClass(current == key ? active_classes : item_classes, 'pager__item') }}">
        {% if current == key %}
          {% set title = 'Current page'|t %}
        {% else %}
          {% set title = 'Go to page @key'|t({'@key': key}) %}
        {% endif %}
        <a href="{{ item.href }}" title="{{ title }}"{{ item.attributes.addClass('stretched-link', current == key ? 'pointer-events-none')|without('href', 'title') }}>
            <span class="visually-hidden">
              {{ current == key ? 'Current page'|t : 'Page'|t }}
            </span>
          {{- key -}}
        </a>
        </li>
      {% endfor %}
      {# Add an ellipsis if there are further next pages. #}
      {% if ellipses.next %}
        <li{{ create_attribute().addClass(item_classes, 'pager__item', 'pager__item--ellipsis', 'pointer-events-none') }} role="presentation">&hellip;</li>
      {% endif %}
      {# Print next item if we are not on the last page. #}
      {% if items.next %}
        <li{{ create_attribute().addClass(item_classes, 'pager__item', 'pager__item--next') }}>
          <a href="{{ items.next.href }}" title="{{ 'Go to next page'|t }}" rel="next"{{ items.next.attributes.addClass('stretched-link')|without('href', 'title', 'rel') }}>
            <span class="visually-hidden">{{ 'Next page'|t }}</span>
            <span aria-hidden="true">{{ items.next.text|default('Next ›'|t) }}</span>
          </a>
        </li>
      {% endif %}
      {# Print last item if we are not on the last page. #}
      {% if items.last %}
        <li{{ create_attribute().addClass(item_classes, 'pager__item', 'pager__item--last') }}>
          <a href="{{ items.last.href }}" title="{{ 'Go to last page'|t }}"{{ items.last.attributes.addClass('stretched-link')|without('href', 'title') }}>
            <span class="visually-hidden">{{ 'Last page'|t }}</span>
            <span aria-hidden="true">{{ items.last.text|default('Last »'|t) }}</span>
          </a>
        </li>
      {% endif %}
    </ul>
  </nav>
{% endif %}
