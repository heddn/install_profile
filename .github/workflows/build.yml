name: Test and build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

env:
  COMPOSER_FLAGS: "--ansi --no-interaction --no-progress --prefer-dist --optimize-autoloader"
  BROWSERTEST_OUTPUT_DIRECTORY: ${{ github.workspace }}/web/sites/simpletest/browser_output
  THEME_DIRECTORY: web/themes/custom/custom_tw
  PHP_EXTENSIONS: sodium, json, pdo_sqlite, gd, xml, iconv, intl, ctype, mbstring
  PHP_VERSION: 8.2
  NODE_VERSION: 22

permissions:
  actions: write
  contents: write
  id-token: write
  issues: write
  pull-requests: write

jobs:
  test:
    name: Testing
    runs-on: ubuntu-latest
    services:
      mariadb:
        image: mariadb:10.6
        ports:
          - 3306
        env:
          MYSQL_USER: db
          MYSQL_PASSWORD: db
          MYSQL_DATABASE: db
          MYSQL_ROOT_PASSWORD: root
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3
    steps:
      - name: Setup cache PHP extensions
        id: extcache
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ env.PHP_VERSION }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          key: php-ext-cache-v1
      - name: Cache PHP extensions
        uses: actions/cache@v4
        with:
          path: ${{ steps.extcache.outputs.dir }}
          key: ${{ steps.extcache.outputs.key }}
          restore-keys: ${{ steps.extcache.outputs.key }}
      - name: Installing PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          coverage: none
          tools: composer:v2
          ini-values: sendmail_path=/bin/true
      - name: Setup problem matchers for PHP
        run: echo "::add-matcher::${{runner.tool_cache}}/php.json"
      - name: Setup problem matchers for PHPUnit
        run: echo "::add-matcher::${{runner.tool_cache}}/phpunit.json"
      - uses: actions/checkout@v2
      - name: Validate composer.json and composer.lock
        run: composer validate
      - name: Set Composer Cache Directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v4
        with:
          path: ${{steps.composer-cache.outputs.dir}}
          key: composer-${{hashFiles('**/composer.lock', '**/composer.patches.json')}}
          restore-keys: |
            composer-
      - name: Install PHP dependencies
        run: 'composer install ${{env.COMPOSER_FLAGS}}'
      - name: PHP linting
        run: composer lint
      - name: Run PHPCBF
        continue-on-error: true
        run: composer phpcbf web/modules/custom web/themes/custom web/profiles
      - uses: stefanzweifel/git-auto-commit-action@v5.0.1
        with:
          commit_message: Auto-commit phpcbf changes
      - name: Run PHPCS
        run: vendor/bin/phpcs -s --report=checkstyle web/modules/custom web/themes/custom web/profiles | vendor/bin/cs2pr
      - name: Prepare test output directory
        run: mkdir -p ${{env.BROWSERTEST_OUTPUT_DIRECTORY}}
      - name: Static analysis
        run: composer phpstan web/modules/custom web/themes/custom web/profiles
      - name: Verify MariaDB connection
        run: |
          while ! mysqladmin ping -h"127.0.0.1" -P"${{ job.services.mariadb.ports[3306] }}" --silent; do
            echo "Waiting for db to start..."
            sleep 1
          done
      - name: Setup Node + Yarn
        uses: actions/setup-node@v4.0.2
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: web/themes/custom/custom_tw/package-lock.json
      - name: Install NPM dependencies
        run: npm --prefix=${{env.THEME_DIRECTORY}} install
      - name: Compile CSS
        run: |
          npm --prefix=${{env.THEME_DIRECTORY}} run build-prod
          ls -lh ${{env.THEME_DIRECTORY}}/build/app.css
          rm -r ${{env.THEME_DIRECTORY}}/node_modules
      - name: Run test suite
        run: |
          nohup composer webserver > /dev/null 2>&1 &
          BROWSERTEST_DB_DUMP_PATH=${{ github.workspace }}/test-artifacts/test-COMMIT-HASH.sql composer test
        env:
          SIMPLETEST_DB: mysql://db:db@127.0.0.1:${{ job.services.mariadb.ports[3306] }}/db
          SIMPLETEST_BASE_URL: 'http://127.0.0.1:8888'
          PHP_CLI_SERVER_WORKERS: 2
      - name: Upload archive of test artifacts
        uses: actions/upload-artifact@v4.3.3
        if: always()
        with:
          name: artifacts
          path: |
            web/sites/simpletest/*
          if-no-files-found: ignore
